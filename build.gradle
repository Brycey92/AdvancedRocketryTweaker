buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "${project.mcVersion}-${project.modVersion}"
group = "p455w0rd.art.${project.modId}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = project.modName.replaceAll("\\s","")

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

repositories {
     maven {
        name "DVS1 Maven FS'"
        url 'http://dvs1.progwml6.com/files/maven'
    }
	
	maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
	
	maven {
		name = "Blamejared"
		url = "https://maven.blamejared.com/"
	}
}

minecraft {
    version = "${project.mcVersion}-${project.forgeVersion}"
    runDir = "eclipse"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mappingsVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
	//deobfCompile "mezz.jei:jei_${mcVersion}:${jeiVersion}"
	deobfCompile "CraftTweaker2:CraftTweaker2-MC1120-Main:${ctVersion}"
	deobfCompile "com.blamejared:MTLib:3.0.5.15"
	deobfCompile "advanced-rocketry:AdvancedRocketry-${mcVersion}-${arVersion}:${arBuild}:deobf"

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources {
	includeEmptyDirs = false

    // this will ensure that this task is redone when the versions change.
	inputs.property "modId", project.modId
	inputs.property "modName", project.modName
    inputs.property "modVersion", project.modVersion
    inputs.property "mcVersion", project.minecraft.version
	inputs.property "forgeVersion", project.forgeVersion

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		include "assets/${project.modId}/recipes/**.json"
		include "assets/${project.modId}/models/item/**.json"
		include "assets/${project.modId}/lang/**.lang"
                
        expand 'modId':project.modId, 'modName':project.modName,
		'modVersion':project.modVersion, 'mcVersion':project.minecraft.version,
		'forgeVersion':project.forgeVersion
    }
        
    // copy everything else
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
		exclude "assets/${project.modId}/recipes/**.json"
		exclude "assets/${project.modId}/models/item/**.json"
		exclude "assets/${project.modId}/lang/**.lang"
    }
}
